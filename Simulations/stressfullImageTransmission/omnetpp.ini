# ****************************************************************************
# Universidade Estadual de Feira de Santana
# Author: Lucas Vinicius dos Santos Assis
# Simulation wrote as final project on graduation in Computer Engeneering
# Advisor: Dr. Daniel Gouveia Costa
# ***************************************************************************/

[General]

# =============================================
# Always include the main Castalia.ini file
# =============================================
include ../Parameters/Castalia.ini


# Setting the simulation execution in simulation time
sim-time-limit = 100s

# A field with 100**2 meters
SN.field_x = 100		# meters
SN.field_y = 100		# meters
SN.field_y = 0			# meters

# How many nodes the simulation are present in the simulation
SN.numNodes = 7

# Set the position in 2d field of each node.
# The nodes are separated of the nearest neighbor by 5 meters
# REMEMBER: BY DEFAULT THE SINK NODE IS THE NODE WITH '0' ID
SN.node[0].xCoor = 10
SN.node[0].yCoor = 10

SN.node[1].xCoor = 0
SN.node[1].yCoor = 10

SN.node[2].xCoor = 20
SN.node[2].yCoor = 10

SN.node[3].xCoor = 30
SN.node[3].yCoor = 10

SN.node[4].xCoor = 10
SN.node[4].yCoor = 20

SN.node[5].xCoor = 10
SN.node[5].yCoor = 30

SN.node[6].xCoor = 40
SN.node[6].yCoor = 0

# Here I set the antenna to send data packets -> 
# The CC2420 is a true single-chip 2.4 GHz IEEE 802.15.4 compliant
# RF transceiver designed for low power and low voltage wireless applications.
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
# Max Tx power to all nodes because they are distant
SN.node[*].Communication.Radio.TxOutputPower = "0dBm"
# These parameters set the size of packet used in this application
SN.node[*].Application.packetHeaderOverhead = 27
# SN.node[*].Application.constantDataPayload = 100
SN.node[*].Application.constantDataPayload = 100
# MAC Protocol used
SN.node[*].Communication.MACProtocolName = "TMAC"
# Routing is happening statically
SN.node[*].Communication.RoutingProtocolName = "BypassRouting"

# === Application Used
# Using my own application protocol, that allows the transmission of images with Castalia
SN.node[*].ApplicationName = "ImageTransmission"
# The relative path to the nodes get the original images to send of Castalia network
SN.node[*].Application.originalImagesFolder = "originalImages"
# The relative path of the folder to store the received images from sink node
SN.node[*].Application.receivedImagesFolder = "${resultdir}"
# Turn on the Castalia generation of trace files
SN.node[*].Application.collectTraceInfo = true
# Set the default format of the sent/received image in this application
SN.node[*].Application.imageFormat = "jpg"

# Using self generated images in node 1
SN.node[1].Application.selfGeneratedImg = true
SN.node[1].Application.imgHeight = 1000
SN.node[1].Application.imgWidth = 1000
SN.node[*].Application.useColoredImages = false

# Other nodes using real images available in originalImageFolder
SN.node[2..].Application.selfGeneratedImg = false

# This parameter sets how many different images the node will send
# The sent images have a small resolution to avoind performance issues
SN.node[0].Application.numImageSources = 0
SN.node[1].Application.numImageSources = 5
SN.node[2].Application.numImageSources = 3
SN.node[3].Application.numImageSources = 3
SN.node[4].Application.numImageSources = 3
SN.node[5].Application.numImageSources = 3
SN.node[6].Application.numImageSources = 3

# Delay to start the node in the network
SN.node[0].Application.startupDelay = 0
SN.node[1].Application.startupDelay = 1
SN.node[2].Application.startupDelay = 1
SN.node[3].Application.startupDelay = 2
SN.node[4].Application.startupDelay = 1
SN.node[5].Application.startupDelay = 2
SN.node[6].Application.startupDelay = 20

# Indicates the way to send packets, periodic (value = 1) or burst (value = 2)
SN.node[1].Application.imgPckSendingType = 1
SN.node[2].Application.imgPckSendingType = 1
SN.node[3].Application.imgPckSendingType = 1
SN.node[4].Application.imgPckSendingType = 1
SN.node[5].Application.imgPckSendingType = 1

# This parameter indicates how many imagens/second the node will send
# SN.node[0].Application.imageFrequency = 0
# SN.node[1].Application.imageFrequency = 3
# SN.node[2].Application.imageFrequency = 0.25
# SN.node[3].Application.imageFrequency = 0.5
# SN.node[4].Application.imageFrequency = 0.25
# SN.node[5].Application.imageFrequency = 0.5
# SN.node[6].Application.imageFrequency = 0.5

# # Static rounting
# SN.node[0].Application.nextRecipient = "0"
# SN.node[1].Application.nextRecipient = "0"
# SN.node[2].Application.nextRecipient = "0"
# SN.node[3].Application.nextRecipient = "0"
# SN.node[4].Application.nextRecipient = "0"
# SN.node[5].Application.nextRecipient = "0"
# SN.node[6].Application.nextRecipient = "0"

[Config HeadGroup]
# Set the current experiment name to save the correct received images according each  different configuration
# SN.node[*].Application.configurationName = "${configname}"

# =============================================
# Always include the main Castalia.ini file
# =============================================
include ../Parameters/Castalia.ini


# Setting the simulation execution in simulation time
sim-time-limit = 100s

# A field with 100**2 meters
SN.field_x = 100		# meters
SN.field_y = 100		# meters
SN.field_y = 0			# meters

# How many nodes the simulation are present in the simulation
SN.numNodes = 7

# Set the position in 2d field of each node.
# The nodes are separated of the nearest neighbor by 5 meters
# REMEMBER: BY DEFAULT THE SINK NODE IS THE NODE WITH '0' ID
SN.node[0].xCoor = 10
SN.node[0].yCoor = 10

SN.node[1].xCoor = 0
SN.node[1].yCoor = 10

SN.node[2].xCoor = 20
SN.node[2].yCoor = 10

SN.node[3].xCoor = 30
SN.node[3].yCoor = 10

SN.node[4].xCoor = 10
SN.node[4].yCoor = 20

SN.node[5].xCoor = 10
SN.node[5].yCoor = 30

SN.node[6].xCoor = 40
SN.node[6].yCoor = 0

# Here I set the antenna to send data packets -> 
# The CC2420 is a true single-chip 2.4 GHz IEEE 802.15.4 compliant
# RF transceiver designed for low power and low voltage wireless applications.
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
# Max Tx power to all nodes because they are distant
SN.node[*].Communication.Radio.TxOutputPower = "0dBm"
# These parameters set the size of packet used in this application
SN.node[*].Application.packetHeaderOverhead = 27
# SN.node[*].Application.constantDataPayload = 100
SN.node[*].Application.constantDataPayload = 100
# MAC Protocol used
SN.node[*].Communication.MACProtocolName = "TMAC"
# Routing is happening statically
SN.node[*].Communication.RoutingProtocolName = "BypassRouting"

# === Application Used
# Using my own application protocol, that allows the transmission of images with Castalia
SN.node[*].ApplicationName = "ImageTransmission"
# The relative path to the nodes get the original images to send of Castalia network
SN.node[*].Application.originalImagesFolder = "originalImages"
# The relative path of the folder to store the received images from sink node
SN.node[*].Application.receivedImagesFolder = "${configname}"
# Turn on the Castalia generation of trace files
SN.node[*].Application.collectTraceInfo = true
# Set the default format of the sent/received image in this application
SN.node[*].Application.imageFormat = "jpg"

# Using self generated images in node 1
SN.node[1].Application.selfGeneratedImg = true
SN.node[1].Application.imgHeight = 1000
SN.node[1].Application.imgWidth = 1000
SN.node[*].Application.useColoredImages = false

# Other nodes using real images available in originalImageFolder
SN.node[2..].Application.selfGeneratedImg = false

# This parameter sets how many different images the node will send
# The sent images have a small resolution to avoind performance issues
SN.node[0].Application.numImageSources = 0
SN.node[1].Application.numImageSources = 5
SN.node[2].Application.numImageSources = 3
SN.node[3].Application.numImageSources = 3
SN.node[4].Application.numImageSources = 3
SN.node[5].Application.numImageSources = 3
SN.node[6].Application.numImageSources = 3

# Delay to start the node in the network
SN.node[0].Application.startupDelay = 0
SN.node[1].Application.startupDelay = 1
SN.node[2].Application.startupDelay = 1
SN.node[3].Application.startupDelay = 2
SN.node[4].Application.startupDelay = 1
SN.node[5].Application.startupDelay = 2
SN.node[6].Application.startupDelay = 20

# Indicates the way to send packets, periodic (value = 1) or burst (value = 2)
SN.node[1].Application.imgPckSendingType = 1
SN.node[2].Application.imgPckSendingType = 1
SN.node[3].Application.imgPckSendingType = 1
SN.node[4].Application.imgPckSendingType = 1
SN.node[5].Application.imgPckSendingType = 1

# This parameter indicates how many imagens/second the node will send
# SN.node[0].Application.imageFrequency = 0
# SN.node[1].Application.imageFrequency = 3
# SN.node[2].Application.imageFrequency = 0.25
# SN.node[3].Application.imageFrequency = 0.5
# SN.node[4].Application.imageFrequency = 0.25
# SN.node[5].Application.imageFrequency = 0.5
# SN.node[6].Application.imageFrequency = 0.5

# # Static rounting
# SN.node[0].Application.nextRecipient = "0"
# SN.node[1].Application.nextRecipient = "0"
# SN.node[2].Application.nextRecipient = "0"
# SN.node[3].Application.nextRecipient = "0"
# SN.node[4].Application.nextRecipient = "0"
# SN.node[5].Application.nextRecipient = "0"
# SN.node[6].Application.nextRecipient = "0"


# Static rounting
SN.node[0].Application.nextRecipient = "0"
SN.node[1].Application.nextRecipient = "0"
SN.node[2].Application.nextRecipient = "0"
SN.node[3].Application.nextRecipient = "2"
SN.node[4].Application.nextRecipient = "0"
SN.node[5].Application.nextRecipient = "4"
SN.node[6].Application.nextRecipient = "3"

# This parameter indicates how many imagens/second the node will send
SN.node[0].Application.imageFrequency = 0
SN.node[1].Application.imageFrequency = 3
SN.node[2].Application.imageFrequency = 0
SN.node[3].Application.imageFrequency = 0
SN.node[4].Application.imageFrequency = 0
SN.node[5].Application.imageFrequency = 3
SN.node[6].Application.imageFrequency = 3

